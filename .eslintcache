[{"/Users/bogutskii/WebstormProjects/memory-game-react/src/index.js":"1","/Users/bogutskii/WebstormProjects/memory-game-react/src/App.js":"2","/Users/bogutskii/WebstormProjects/memory-game-react/src/components/Card/Card.js":"3","/Users/bogutskii/WebstormProjects/memory-game-react/src/components/Field.js":"4","/Users/bogutskii/WebstormProjects/memory-game-react/src/components/NavBar/NavBar.js":"5","/Users/bogutskii/WebstormProjects/memory-game-react/src/components/Rules.js":"6","/Users/bogutskii/WebstormProjects/memory-game-react/src/components/Card/CardValue.js":"7","/Users/bogutskii/WebstormProjects/memory-game-react/src/components/Footer/Footer.js":"8"},{"size":230,"mtime":1612249480957,"results":"9","hashOfConfig":"10"},{"size":1029,"mtime":1612250658931,"results":"11","hashOfConfig":"10"},{"size":310,"mtime":1612249926140,"results":"12","hashOfConfig":"10"},{"size":136,"mtime":1612080889298,"results":"13","hashOfConfig":"10"},{"size":400,"mtime":1611986748948,"results":"14","hashOfConfig":"10"},{"size":2139,"mtime":1611973719940,"results":"15","hashOfConfig":"10"},{"size":570,"mtime":1612250658935,"results":"16","hashOfConfig":"10"},{"size":137,"mtime":1612080793738,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kix1xm",{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/Users/bogutskii/WebstormProjects/memory-game-react/src/index.js",[],"/Users/bogutskii/WebstormProjects/memory-game-react/src/App.js",["38","39","40"],"/Users/bogutskii/WebstormProjects/memory-game-react/src/components/Card/Card.js",["41","42"],"/Users/bogutskii/WebstormProjects/memory-game-react/src/components/Field.js",["43"],"import React from 'react';\nimport Card from \"./Card/Card\";\n\n\nconst Field = (props) => {\n\n    return <>\n\n\n    </>\n}\nexport default Field;",["44","45"],"/Users/bogutskii/WebstormProjects/memory-game-react/src/components/NavBar/NavBar.js",[],"/Users/bogutskii/WebstormProjects/memory-game-react/src/components/Rules.js",["46"],"import react from 'react';\n\n\nconst Rules = () => {\n\n    return <div>\n\n        <p className=\"lh-base\">\n\n            <h3>Carefully punch the 72 cards out of the cardboard sheet. </h3>\n            Mix and spread the cards picture-side-down on a\n            flat surface.\n            <div className=\"p-3 mb-2 bg-light text-dark\">\n                Note: Keep the plastic tray for storing the cards. This will prevent them from becoming nicked\n                or marked.\n\n            </div>\n\n\n            Form 9 rows of cards across and 8 rows down, using all 72 cards (36 pairs). Or, divide the cards in half (18\n            pairs), and form 6 rows across and 6 rows down, for beginners.\n\n            Game Play\n            Youngest player goes first. Players take turns, to the left, turning any two cards picture-side-up. The\n            cards must be turned over completely, so that all players can see them.\n\n\n            A Match: A player makes a match if the two cards turned picture-side-up are identical.\n\n            When a match is made, the player takes both cards and places them in front of him or her. That player then\n            takes another turn, and continues taking turns until he or she misses.\n\n            A Miss: A player misses if the two cards turned over are not identical. When a player misses, he or she\n            turns the two cards picture-side-down again, in the same place.\n\n            That player's turn ends-and all players try to remember which cards were turned over, for future matches.\n\n\n            The game continues until all cards have been matched and removed from the playing area. All players then\n            count up their matching pairs.\n\n\n            End of the Game\n            The player who has the most pairs of matching cards wins.\n\n\n            Solo Play\n            This is excellent practice for developing concentration and memory skills.\n\n            Just set up the game as described above, using any number of pairs, and count the number of turns it takes\n            you to match them all. Try to improve with each game you play.\n\n\n        </p>\n\n    </div>\n}\nexport default Rules;","/Users/bogutskii/WebstormProjects/memory-game-react/src/components/Card/CardValue.js",["47","48"],"import React, {useState} from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\nimport './card.css'\n\nconst CardValue = (props) => {\n\n\n    return (\n        <div>\n\n            <p>How many cards</p>\n            <label htmlFor=\"customRange3\" className=\"form-label\">Example range</label>\n            <input value={props.cards} onChange={(e) => props.setCards(e.target.value)} type=\"range\"\n                   className=\"form-range\"\n                   min=\"8\" max=\"40\" step=\"2\" id=\"customRange3\"/>\n            {props.cards}\n        </div>\n    );\n}\nexport default CardValue;","/Users/bogutskii/WebstormProjects/memory-game-react/src/components/Footer/Footer.js",[],{"ruleId":"49","severity":1,"message":"50","line":1,"column":26,"nodeType":"51","messageId":"52","endLine":1,"endColumn":35},{"ruleId":"49","severity":1,"message":"53","line":11,"column":5,"nodeType":"51","messageId":"52","endLine":11,"endColumn":11},{"ruleId":"49","severity":1,"message":"54","line":13,"column":5,"nodeType":"51","messageId":"52","endLine":13,"endColumn":9},{"ruleId":"49","severity":1,"message":"55","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":21},{"ruleId":"49","severity":1,"message":"56","line":3,"column":8,"nodeType":"51","messageId":"52","endLine":3,"endColumn":17},{"ruleId":"49","severity":1,"message":"57","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":12},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"49","severity":1,"message":"62","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":13},{"ruleId":"49","severity":1,"message":"63","line":1,"column":16,"nodeType":"51","messageId":"52","endLine":1,"endColumn":24},{"ruleId":"49","severity":1,"message":"55","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":21},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Link' is defined but never used.","'ReactCardFlip' is defined but never used.","'CardValue' is defined but never used.","'Card' is defined but never used.","no-native-reassign",["64"],"no-negated-in-lhs",["65"],"'react' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]